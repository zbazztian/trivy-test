#Tue Apr 26 12:30:00 BST 2016
providers|http\://localhost\:8080/mend-test|lastSnapshotDate|"commons-io"\n="Apr 26, 2016 11\:54\:24 AM"
providers|http\://localhost\:8080/mend-test|snapshotDismissedViolations|"commons-io"\n=[]
providers|http\://localhost\:8080/mend-test|violations|"commons-io"\n=[{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/MostlySimilarFile.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java","line"\:0,"offset"\:0,"length"\:0,"message"\:"91% of the lines in SuffixFileFilter are similar to lines in [[\\"PrefixFileFilter\\"|\\"relative\://src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java\:0\:0\:0\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Size/FLinesOfCode.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/FileUtils.java","line"\:0,"offset"\:0,"length"\:0,"message"\:"Lines of code in files too high (1226). It is a warning for the value to be higher or equal to 1000.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Size/FLinesOfCode.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:0,"offset"\:0,"length"\:0,"message"\:"Lines of code in files too high (2400). It is a warning for the value to be higher or equal to 1000.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Size/FLinesOfCode.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/IOUtilsTestCase.java","line"\:0,"offset"\:0,"length"\:0,"message"\:"Lines of code in files too high (1091). It is a warning for the value to be higher or equal to 1000.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Size/FLinesOfCode.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java","line"\:0,"offset"\:0,"length"\:0,"message"\:"Lines of code in files too high (1227). It is a warning for the value to be higher or equal to 1000.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/MostlySimilarFile.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/TaggedInputStream.java","line"\:0,"offset"\:0,"length"\:0,"message"\:"86% of the lines in TaggedInputStream are similar to lines in [[\\"TaggedOutputStream\\"|\\"relative\://src/main/java/org/apache/commons/io/output/TaggedOutputStream.java\:0\:0\:0\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/MostlySimilarFile.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/output/TaggedOutputStream.java","line"\:0,"offset"\:0,"length"\:0,"message"\:"86% of the lines in TaggedOutputStream are similar to lines in [[\\"TaggedInputStream\\"|\\"relative\://src/main/java/org/apache/commons/io/input/TaggedInputStream.java\:0\:0\:0\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Encapsulation/TSpecialisationIndex.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/output/TeeOutputStream.java","line"\:29,"offset"\:1092,"length"\:15,"message"\:"Type specialization index too high (5). It is a warning for the value to be higher or equal to 4.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Concurrency/Thread Safety/LazyInitStaticField.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java","line"\:31,"offset"\:1149,"length"\:48,"message"\:"Incorrect lazy initialization of static field [[\\"testDir\\"|\\"relative\://src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java\:26\:1001\:7\\"]]\: Missing synchronization.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/TodoComments.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/output/TeeOutputStream.java","line"\:32,"offset"\:1221,"length"\:33,"message"\:"TODO/FIXME comment","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Frameworks/Java objects/Serialization/NonSerializableField.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/comparator/ReverseComparator.java","line"\:33,"offset"\:1249,"length"\:8,"message"\:"This field is in a serializable class,  but is not serializable itself because Comparator\\u003cFile\\u003e is not serializable.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Frameworks/Java objects/Serialization/NonSerializableField.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java","line"\:33,"offset"\:1260,"length"\:6,"message"\:"This field is in a serializable class,  but is not serializable itself because IOFileFilter is not serializable.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Size/BlockWithTooManyStatements.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java","line"\:40,"offset"\:1267,"length"\:1407,"message"\:"Block with too many statements (4 complex statements in the block).","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Frameworks/Java objects/Serialization/NonSerializableField.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/CharSequenceReader.java","line"\:36,"offset"\:1353,"length"\:12,"message"\:"This field is in a serializable class,  but is not serializable itself because CharSequence is not serializable.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Naming/SameNameAsSuper.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java","line"\:33,"offset"\:1362,"length"\:24,"message"\:"XmlStreamReaderException has the same name as its supertype [[\\"org.apache.commons.io.input.XmlStreamReaderException\\"|\\"relative\://src/main/java/org/apache/commons/io/input/XmlStreamReaderException.java\:34\:1362\:24\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Frameworks/Java objects/Serialization/NonSerializableField.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java","line"\:37,"offset"\:1403,"length"\:14,"message"\:"This field is in a serializable class,  but is not serializable itself because FilenameFilter is not serializable.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Size/BlockWithTooManyStatements.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/HexDumpTest.java","line"\:45,"offset"\:1421,"length"\:7860,"message"\:"Block with too many statements (9 complex statements in the block).","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Frameworks/Java objects/Serialization/NonSerializableField.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java","line"\:39,"offset"\:1475,"length"\:10,"message"\:"This field is in a serializable class,  but is not serializable itself because FileFilter is not serializable.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java","line"\:47,"offset"\:1520,"length"\:15,"message"\:"Method assertFiltering is duplicated in [[\\"org.apache.commons.io.filefilter.FileFilterTestCase\\"|\\"relative\://src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java\:61\:1963\:15\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Encapsulation/TSpecialisationIndex.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/TeeInputStream.java","line"\:39,"offset"\:1527,"length"\:14,"message"\:"Type specialization index too high (4). It is a warning for the value to be higher or equal to 4.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Exceptions/DroppedExceptions.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/serialization/ClosingBase.java","line"\:50,"offset"\:1530,"length"\:27,"message"\:"Exceptions should not be dropped.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Complexity/TResponse.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java","line"\:42,"offset"\:1533,"length"\:18,"message"\:"Class response too high (424). It is a warning for the value to be higher or equal to 350.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Complexity/TResponse.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java","line"\:42,"offset"\:1533,"length"\:20,"message"\:"Class response too high (406). It is a warning for the value to be higher or equal to 350.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Frameworks/Java objects/Serialization/NonSerializableField.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java","line"\:37,"offset"\:1535,"length"\:2,"message"\:"This field is in a serializable class,  but is not serializable itself because InputStream is not serializable.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Complexity/TResponse.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java","line"\:47,"offset"\:1591,"length"\:18,"message"\:"Class response too high (367). It is a warning for the value to be higher or equal to 350.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java","line"\:46,"offset"\:1613,"length"\:59,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Inefficient Code/NewStringString.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java","line"\:49,"offset"\:1613,"length"\:34,"message"\:"Inefficient new String(String) constructor.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Frameworks/Java objects/Serialization/NonSerializableField.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java","line"\:42,"offset"\:1637,"length"\:11,"message"\:"This field is in a serializable class,  but is not serializable itself because IOFileFilter is not serializable.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java","line"\:54,"offset"\:1644,"length"\:24,"message"\:"Method testRead ignores exceptional return value of InputStream.read","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/ReturnValueIgnored.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java","line"\:54,"offset"\:1644,"length"\:24,"message"\:"The result of the call is ignored, but 95% of calls to read use the return value.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Frameworks/Java objects/Serialization/NonSerializableField.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java","line"\:44,"offset"\:1645,"length"\:11,"message"\:"This field is in a serializable class,  but is not serializable itself because IOFileFilter is not serializable.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Inefficient Code/NewStringString.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java","line"\:55,"offset"\:1785,"length"\:34,"message"\:"Inefficient new String(String) constructor.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Complexity/TResponse.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:48,"offset"\:1792,"length"\:17,"message"\:"Class response too high (1106). It is a warning for the value to be higher or equal to 350.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/ReturnValueIgnored.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java","line"\:53,"offset"\:1801,"length"\:18,"message"\:"The result of the call is ignored, but 98% of calls to getTestDirectory use the return value.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/ReturnValueIgnored.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java","line"\:61,"offset"\:1839,"length"\:30,"message"\:"The result of the call is ignored, but 96% of calls to read use the return value.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java","line"\:61,"offset"\:1839,"length"\:30,"message"\:"Method testRead ignores exceptional return value of InputStream.read","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/ReturnValueIgnored.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java","line"\:56,"offset"\:1875,"length"\:18,"message"\:"The result of the call is ignored, but 98% of calls to getTestDirectory use the return value.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/MostlyDuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java","line"\:61,"offset"\:1963,"length"\:15,"message"\:"83% of the statements in assertFiltering are duplicated in [[\\"RegexFileFilterTestCase.assertFiltering(IOFileFilter, File, boolean)\\"|\\"relative\://src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java\:47\:1520\:15\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java","line"\:59,"offset"\:1987,"length"\:18,"message"\:"Method setUp ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java","line"\:60,"offset"\:2015,"length"\:18,"message"\:"Method setUp ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java","line"\:61,"offset"\:2043,"length"\:18,"message"\:"Method setUp ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java","line"\:54,"offset"\:2044,"length"\:18,"message"\:"Method setUp ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java","line"\:60,"offset"\:2070,"length"\:15,"message"\:"Method setUp ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java","line"\:55,"offset"\:2072,"length"\:17,"message"\:"Method setUp ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Inefficient Code/NewStringString.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java","line"\:64,"offset"\:2078,"length"\:34,"message"\:"Inefficient new String(String) constructor.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/ReturnValueIgnored.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java","line"\:71,"offset"\:2090,"length"\:18,"message"\:"The result of the call is ignored, but 94% of calls to available use the return value.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Complexity/TResponse.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/IOUtilsTestCase.java","line"\:52,"offset"\:2154,"length"\:15,"message"\:"Class response too high (482). It is a warning for the value to be higher or equal to 350.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java","line"\:55,"offset"\:2193,"length"\:51,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/MostlyDuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java","line"\:67,"offset"\:2207,"length"\:5,"message"\:"92% of the statements in setUp are duplicated in [[\\"FileUtilsTestCase.setUp()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileUtilsTestCase.java\:92\:2983\:5\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/ReturnValueIgnored.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java","line"\:68,"offset"\:2242,"length"\:18,"message"\:"The result of the call is ignored, but 98% of calls to getTestDirectory use the return value.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java","line"\:81,"offset"\:2324,"length"\:14,"message"\:"Method testSkip ignores exceptional return value of InputStream.skip","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/CWE/CWE-190/ComparisonWithWiderType.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/testtools/TestUtils.java","line"\:66,"offset"\:2356,"length"\:8,"message"\:"Comparison between [[\\"expression\\"|\\"relative\://src/test/java/org/apache/commons/io/testtools/TestUtils.java\:66\:2356\:1\\"]] of type int and [[\\"expression\\"|\\"relative\://src/test/java/org/apache/commons/io/testtools/TestUtils.java\:66\:2360\:4\\"]] of wider type long.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Coupling/MutualDependency.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java","line"\:57,"offset"\:2361,"length"\:21,"message"\:"This type and type [[\\"IOUtils\\"|\\"relative\://src/main/java/org/apache/commons/io/IOUtils.java\:100\:4172\:7\\"]] are mutually dependent.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/CommentedCode.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/testtools/TestUtils.java","line"\:67,"offset"\:2385,"length"\:26,"message"\:"This comment appears to contain commented-out code","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Inefficient Code/NewStringString.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java","line"\:75,"offset"\:2457,"length"\:34,"message"\:"Inefficient new String(String) constructor.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java","line"\:61,"offset"\:2531,"length"\:51,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Useless Code/EmptyStatement.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/output/ChunkedWriterTest.java","line"\:65,"offset"\:2538,"length"\:1,"message"\:"This empty statement should be deleted.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Complexity/TResponse.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/FileUtils.java","line"\:74,"offset"\:2560,"length"\:9,"message"\:"Class response too high (447). It is a warning for the value to be higher or equal to 350.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java","line"\:65,"offset"\:2597,"length"\:53,"message"\:"Method setUp ignores exceptional return value of File.setLastModified","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java","line"\:79,"offset"\:2719,"length"\:29,"message"\:"This CountingInputStream is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java","line"\:71,"offset"\:2852,"length"\:30,"message"\:"This XmlStreamReader is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Inefficient Code/NewStringString.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java","line"\:86,"offset"\:2858,"length"\:34,"message"\:"Inefficient new String(String) constructor.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Useless Code/EmptyStatement.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java","line"\:71,"offset"\:2892,"length"\:1,"message"\:"This empty statement should be deleted.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/ReturnValueIgnored.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java","line"\:85,"offset"\:2910,"length"\:14,"message"\:"The result of the call is ignored, but 93% of calls to getCount use the return value.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseWriter.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/testtools/TestUtils.java","line"\:78,"offset"\:2926,"length"\:26,"message"\:"This FileOutputStream is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/MostlyDuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:92,"offset"\:2983,"length"\:5,"message"\:"92% of the statements in setUp are duplicated in [[\\"FilenameUtilsTestCase.setUp()\\"|\\"relative\://src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java\:67\:2207\:5\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/output/CountingOutputStream.java","line"\:86,"offset"\:3021,"length"\:10,"message"\:"Method resetCount is duplicated in [[\\"org.apache.commons.io.input.CountingInputStream\\"|\\"relative\://src/main/java/org/apache/commons/io/input/CountingInputStream.java\:107\:3626\:10\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseWriter.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java","line"\:86,"offset"\:3085,"length"\:50,"message"\:"This FileWriterWithEncoding is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Inefficient Code/NewStringString.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java","line"\:95,"offset"\:3139,"length"\:34,"message"\:"Inefficient new String(String) constructor.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseWriter.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java","line"\:91,"offset"\:3252,"length"\:60,"message"\:"This FileWriterWithEncoding is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseWriter.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/output/XmlStreamWriter.java","line"\:97,"offset"\:3270,"length"\:26,"message"\:"This FileOutputStream is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/ReturnValueIgnored.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java","line"\:92,"offset"\:3271,"length"\:18,"message"\:"The result of the call is ignored, but 98% of calls to getTestDirectory use the return value.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/TodoComments.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/Charsets.java","line"\:75,"offset"\:3288,"length"\:68,"message"\:"TODO/FIXME comment","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java","line"\:82,"offset"\:3309,"length"\:53,"message"\:"Method setUp ignores exceptional return value of File.setLastModified","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java","line"\:102,"offset"\:3336,"length"\:5,"message"\:"Method flush is duplicated in [[\\"org.apache.commons.io.output.ProxyWriter\\"|\\"relative\://src/main/java/org/apache/commons/io/output/ProxyWriter.java\:208\:6333\:5\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java","line"\:82,"offset"\:3345,"length"\:43,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java","line"\:78,"offset"\:3355,"length"\:10,"message"\:"Method testFilter is duplicated in [[\\"org.apache.commons.io.DirectoryWalkerTestCaseJava4\\"|\\"relative\://src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java\:80\:3491\:10\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Frameworks/Java objects/Serialization/NonSerializableField.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java","line"\:98,"offset"\:3358,"length"\:1,"message"\:"This field is in a serializable class,  but is not serializable itself because Object is not serializable.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseWriter.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java","line"\:96,"offset"\:3423,"length"\:59,"message"\:"This FileWriterWithEncoding is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/EmptyBlock.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java","line"\:108,"offset"\:3444,"length"\:15,"message"\:"The body of a loop should not be empty. Typographical error or missing code?","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java","line"\:80,"offset"\:3491,"length"\:10,"message"\:"Method testFilter is duplicated in [[\\"org.apache.commons.io.DirectoryWalkerTestCase\\"|\\"relative\://src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java\:78\:3355\:10\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Inefficient Code/NewStringString.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java","line"\:107,"offset"\:3509,"length"\:34,"message"\:"Inefficient new String(String) constructor.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseWriter.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java","line"\:101,"offset"\:3600,"length"\:69,"message"\:"This FileWriterWithEncoding is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/CountingInputStream.java","line"\:107,"offset"\:3626,"length"\:10,"message"\:"Method resetCount is duplicated in [[\\"org.apache.commons.io.output.CountingOutputStream\\"|\\"relative\://src/main/java/org/apache/commons/io/output/CountingOutputStream.java\:86\:3021\:10\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java","line"\:115,"offset"\:3650,"length"\:5,"message"\:"Method close is duplicated in [[\\"org.apache.commons.io.output.ProxyWriter\\"|\\"relative\://src/main/java/org/apache/commons/io/output/ProxyWriter.java\:221\:6647\:5\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java","line"\:102,"offset"\:3657,"length"\:16,"message"\:"Method testDirectory ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Expressions/DangerousNonCircuitLogic.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java","line"\:112,"offset"\:3673,"length"\:67,"message"\:"Possibly dangerous use of non-short circuit logic","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Expressions/DangerousNonCircuitLogic.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java","line"\:112,"offset"\:3673,"length"\:115,"message"\:"Possibly dangerous use of non-short circuit logic","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java","line"\:103,"offset"\:3687,"length"\:16,"message"\:"Method testDirectory ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java","line"\:104,"offset"\:3717,"length"\:16,"message"\:"Method testDirectory ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseWriter.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java","line"\:107,"offset"\:3855,"length"\:38,"message"\:"This FileWriterWithEncoding is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java","line"\:87,"offset"\:3922,"length"\:55,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/TailerTest.java","line"\:118,"offset"\:3992,"length"\:50,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseWriter.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java","line"\:113,"offset"\:4086,"length"\:48,"message"\:"This FileWriterWithEncoding is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/TodoComments.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java","line"\:138,"offset"\:4144,"length"\:38,"message"\:"TODO/FIXME comment","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java","line"\:101,"offset"\:4218,"length"\:19,"message"\:"Method testFilterAndLimitB is duplicated in [[\\"org.apache.commons.io.DirectoryWalkerTestCaseJava4\\"|\\"relative\://src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java\:103\:4352\:19\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java","line"\:94,"offset"\:4307,"length"\:61,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/MostlyDuplicateClass.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java","line"\:95,"offset"\:4318,"length"\:20,"message"\:"All methods in TesterTrueFileFilter are identical in [[\\"org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter\\"|\\"relative\://src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java\:125\:5063\:21\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Frameworks/Java objects/Serialization/NonSerializableInnerClass.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java","line"\:95,"offset"\:4318,"length"\:20,"message"\:"Serializable inner class of non-serializable class [[\\"IOFileFilterAbstractTestCase\\"|\\"relative\://src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java\:25\:970\:28\\"]]. Consider making the class static or implementing readObject() and writeObject().","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Inefficient Code/InnerClassCouldBeStatic.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java","line"\:95,"offset"\:4318,"length"\:20,"message"\:"TesterTrueFileFilter should be made static, since the enclosing instance is not used.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java","line"\:103,"offset"\:4352,"length"\:19,"message"\:"Method testFilterAndLimitB is duplicated in [[\\"org.apache.commons.io.DirectoryWalkerTestCase\\"|\\"relative\://src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java\:101\:4218\:19\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java","line"\:145,"offset"\:4384,"length"\:8,"message"\:"Method toString is duplicated in [[\\"org.apache.commons.io.filefilter.AndFileFilter\\"|\\"relative\://src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java\:153\:4563\:8\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/NullReader.java","line"\:141,"offset"\:4390,"length"\:4,"message"\:"Method mark is duplicated in [[\\"org.apache.commons.io.input.NullInputStream\\"|\\"relative\://src/main/java/org/apache/commons/io/input/NullInputStream.java\:158\:4876\:4\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java","line"\:153,"offset"\:4563,"length"\:8,"message"\:"Method toString is duplicated in [[\\"org.apache.commons.io.filefilter.OrFileFilter\\"|\\"relative\://src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java\:145\:4384\:8\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java","line"\:112,"offset"\:4606,"length"\:19,"message"\:"Method testFilterAndLimitC is duplicated in [[\\"org.apache.commons.io.DirectoryWalkerTestCaseJava4\\"|\\"relative\://src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java\:114\:4734\:19\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java","line"\:101,"offset"\:4688,"length"\:58,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java","line"\:114,"offset"\:4734,"length"\:19,"message"\:"Method testFilterAndLimitC is duplicated in [[\\"org.apache.commons.io.DirectoryWalkerTestCase\\"|\\"relative\://src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java\:112\:4606\:19\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java","line"\:132,"offset"\:4736,"length"\:25,"message"\:"This FileInputStream is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/NullInputStream.java","line"\:158,"offset"\:4876,"length"\:4,"message"\:"Method mark is duplicated in [[\\"org.apache.commons.io.input.NullReader\\"|\\"relative\://src/main/java/org/apache/commons/io/input/NullReader.java\:141\:4390\:4\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java","line"\:108,"offset"\:5058,"length"\:50,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/MostlyDuplicateClass.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java","line"\:125,"offset"\:5063,"length"\:21,"message"\:"All methods in TesterFalseFileFilter are identical in [[\\"org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter\\"|\\"relative\://src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java\:95\:4318\:20\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Frameworks/Java objects/Serialization/NonSerializableInnerClass.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java","line"\:125,"offset"\:5063,"length"\:21,"message"\:"Serializable inner class of non-serializable class [[\\"IOFileFilterAbstractTestCase\\"|\\"relative\://src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java\:25\:970\:28\\"]]. Consider making the class static or implementing readObject() and writeObject().","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Inefficient Code/InnerClassCouldBeStatic.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java","line"\:125,"offset"\:5063,"length"\:21,"message"\:"TesterFalseFileFilter should be made static, since the enclosing instance is not used.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Frameworks/Java objects/Serialization/NonSerializableField.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java","line"\:125,"offset"\:5124,"length"\:62,"message"\:"This field is in a serializable class,  but is not serializable itself because FileAlterationListener is not serializable.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java","line"\:125,"offset"\:5131,"length"\:19,"message"\:"Method testFilterAndLimitD is duplicated in [[\\"org.apache.commons.io.DirectoryWalkerTestCaseJava4\\"|\\"relative\://src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java\:127\:5252\:19\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/EmptyBlock.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java","line"\:120,"offset"\:5153,"length"\:15,"message"\:"The body of a loop should not be empty. Typographical error or missing code?","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/XmlStreamReader.java","line"\:138,"offset"\:5192,"length"\:25,"message"\:"This FileInputStream is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java","line"\:127,"offset"\:5252,"length"\:19,"message"\:"Method testFilterAndLimitD is duplicated in [[\\"org.apache.commons.io.DirectoryWalkerTestCase\\"|\\"relative\://src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java\:125\:5131\:19\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Frameworks/Java objects/Serialization/NonSerializableField.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java","line"\:127,"offset"\:5256,"length"\:10,"message"\:"This field is in a serializable class,  but is not serializable itself because FileFilter is not serializable.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/MostlyDuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/NullReader.java","line"\:170,"offset"\:5297,"length"\:4,"message"\:"83% of the statements in read are duplicated in [[\\"NullInputStream.read()\\"|\\"relative\://src/main/java/org/apache/commons/io/input/NullInputStream.java\:187\:5773\:4\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Frameworks/Java objects/Serialization/NonSerializableField.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java","line"\:128,"offset"\:5303,"length"\:10,"message"\:"This field is in a serializable class,  but is not serializable itself because Comparator\\u003cFile\\u003e is not serializable.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java","line"\:115,"offset"\:5423,"length"\:51,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/EmptyBlock.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java","line"\:145,"offset"\:5446,"length"\:15,"message"\:"The body of a loop should not be empty. Typographical error or missing code?","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Frameworks/Strings/MissingLocaleArgument.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/output/XmlStreamWriter.java","line"\:172,"offset"\:5572,"length"\:24,"message"\:"toUpperCase without locale parameter","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java","line"\:137,"offset"\:5605,"length"\:21,"message"\:"Method testFilterDirAndFile1 is duplicated in [[\\"org.apache.commons.io.DirectoryWalkerTestCaseJava4\\"|\\"relative\://src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java\:139\:5726\:21\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Concurrency/Waiting/BusyWait.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java","line"\:188,"offset"\:5673,"length"\:23,"message"\:"Prefer wait/notify or java.util.concurrent to communicate between threads","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Exceptions/DroppedExceptions.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java","line"\:189,"offset"\:5711,"length"\:42,"message"\:"Exceptions should not be dropped.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Frameworks/Strings/MissingLocaleArgument.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/ByteOrderMark.java","line"\:185,"offset"\:5725,"length"\:50,"message"\:"toUpperCase without locale parameter","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java","line"\:139,"offset"\:5726,"length"\:21,"message"\:"Method testFilterDirAndFile1 is duplicated in [[\\"org.apache.commons.io.DirectoryWalkerTestCase\\"|\\"relative\://src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java\:137\:5605\:21\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/CommentedCode.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DemuxTestCase.java","line"\:165,"offset"\:5741,"length"\:47,"message"\:"This comment appears to contain commented-out code","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/MostlyDuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/NullInputStream.java","line"\:187,"offset"\:5773,"length"\:4,"message"\:"83% of the statements in read are duplicated in [[\\"NullReader.read()\\"|\\"relative\://src/main/java/org/apache/commons/io/input/NullReader.java\:170\:5297\:4\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java","line"\:122,"offset"\:5784,"length"\:53,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java","line"\:153,"offset"\:5930,"length"\:35,"message"\:"Method testIsFileNewer ignores exceptional return value of File.setLastModified","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java","line"\:173,"offset"\:6114,"length"\:45,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java","line"\:149,"offset"\:6129,"length"\:21,"message"\:"Method testFilterDirAndFile2 is duplicated in [[\\"org.apache.commons.io.DirectoryWalkerTestCaseJava4\\"|\\"relative\://src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java\:151\:6250\:21\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java","line"\:129,"offset"\:6165,"length"\:53,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java","line"\:142,"offset"\:6174,"length"\:15,"message"\:"Method testDirectory ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/CommentedCode.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/CopyUtilsTest.java","line"\:159,"offset"\:6220,"length"\:249,"message"\:"This comment appears to contain commented-out code","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java","line"\:151,"offset"\:6250,"length"\:21,"message"\:"Method testFilterDirAndFile2 is duplicated in [[\\"org.apache.commons.io.DirectoryWalkerTestCase\\"|\\"relative\://src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java\:149\:6129\:21\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/output/ProxyWriter.java","line"\:208,"offset"\:6333,"length"\:5,"message"\:"Method flush is duplicated in [[\\"org.apache.commons.io.output.ProxyOutputStream\\"|\\"relative\://src/main/java/org/apache/commons/io/output/ProxyOutputStream.java\:102\:3336\:5\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java","line"\:136,"offset"\:6548,"length"\:54,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/output/ProxyWriter.java","line"\:221,"offset"\:6647,"length"\:5,"message"\:"Method close is duplicated in [[\\"org.apache.commons.io.output.ProxyOutputStream\\"|\\"relative\://src/main/java/org/apache/commons/io/output/ProxyOutputStream.java\:115\:3650\:5\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java","line"\:163,"offset"\:6708,"length"\:16,"message"\:"Method testFileCreate ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/CommentedCode.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DemuxTestCase.java","line"\:199,"offset"\:6825,"length"\:56,"message"\:"This comment appears to contain commented-out code","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java","line"\:144,"offset"\:7061,"length"\:57,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java","line"\:213,"offset"\:7083,"length"\:16,"message"\:"Method testSkipping ignores exceptional return value of ProxyInputStream.read","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java","line"\:205,"offset"\:7195,"length"\:13,"message"\:"Method testSkip ignores exceptional return value of InputStream.skip","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java","line"\:152,"offset"\:7569,"length"\:49,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Useless Code/EmptyStatement.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/serialization/ValidatingObjectInputStreamTest.java","line"\:217,"offset"\:7576,"length"\:1,"message"\:"This empty statement should be deleted.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Inefficient Code/InefficientEmptyStringTest.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java","line"\:188,"offset"\:7700,"length"\:15,"message"\:"Inefficient comparison to empty string, check for zero length instead.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/CommentedCode.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/CopyUtilsTest.java","line"\:199,"offset"\:7947,"length"\:322,"message"\:"This comment appears to contain commented-out code","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java","line"\:195,"offset"\:7953,"length"\:25,"message"\:"Method testMissingStartDirectory is duplicated in [[\\"org.apache.commons.io.DirectoryWalkerTestCaseJava4\\"|\\"relative\://src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java\:197\:8062\:25\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/TodoComments.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java","line"\:197,"offset"\:7995,"length"\:49,"message"\:"TODO/FIXME comment","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java","line"\:160,"offset"\:8058,"length"\:59,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java","line"\:197,"offset"\:8062,"length"\:25,"message"\:"Method testMissingStartDirectory is duplicated in [[\\"org.apache.commons.io.DirectoryWalkerTestCase\\"|\\"relative\://src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java\:195\:7953\:25\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/TodoComments.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java","line"\:199,"offset"\:8104,"length"\:49,"message"\:"TODO/FIXME comment","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/ReturnValueIgnored.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java","line"\:204,"offset"\:8332,"length"\:39,"message"\:"The result of the call is ignored, but 92% of calls to find use the return value.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/ReturnValueIgnored.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java","line"\:206,"offset"\:8441,"length"\:39,"message"\:"The result of the call is ignored, but 92% of calls to find use the return value.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Concurrency/API Misuse/PriorityCalls.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/FileCleaningTracker.java","line"\:211,"offset"\:8493,"length"\:32,"message"\:"Avoid using thread priorities. The effect is unpredictable and not portable.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java","line"\:168,"offset"\:8595,"length"\:59,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/CWE/CWE-311/UseSSL.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java","line"\:235,"offset"\:8595,"length"\:21,"message"\:"Stream using vulnerable non-SSL connection.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/InconsistentCallOnResult.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java","line"\:217,"offset"\:8691,"length"\:47,"message"\:"After 91% of calls to find there is a call to contains on the return value. The call may be missing in this case.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/InconsistentCallOnResult.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java","line"\:219,"offset"\:8800,"length"\:47,"message"\:"After 91% of calls to find there is a call to contains on the return value. The call may be missing in this case.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/CWE/CWE-311/UseSSL.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java","line"\:242,"offset"\:8909,"length"\:21,"message"\:"Stream using vulnerable non-SSL connection.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseWriter.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java","line"\:265,"offset"\:8980,"length"\:49,"message"\:"This FileWriterWithEncoding is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/CWE/CWE-311/UseSSL.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java","line"\:249,"offset"\:9187,"length"\:21,"message"\:"Stream using vulnerable non-SSL connection.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java","line"\:177,"offset"\:9251,"length"\:59,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/TodoComments.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java","line"\:267,"offset"\:9488,"length"\:36,"message"\:"TODO/FIXME comment","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/CommentedCode.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/BOMInputStream.java","line"\:290,"offset"\:9726,"length"\:127,"message"\:"This comment appears to contain commented-out code","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/EmptyBlock.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java","line"\:257,"offset"\:9726,"length"\:15,"message"\:"The body of a loop should not be empty. Typographical error or missing code?","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java","line"\:226,"offset"\:9767,"length"\:16,"message"\:"Method testFileUpdate ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java","line"\:186,"offset"\:9822,"length"\:61,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/IOUtilsTestCase.java","line"\:255,"offset"\:9996,"length"\:37,"message"\:"This CharArrayReader is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java","line"\:265,"offset"\:10106,"length"\:16,"message"\:"Method createNameFilter is duplicated in [[\\"org.apache.commons.io.DirectoryWalkerTestCase\\"|\\"relative\://src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java\:269\:10322\:16\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/IOUtilsTestCase.java","line"\:259,"offset"\:10162,"length"\:44,"message"\:"This CharArrayReader is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java","line"\:193,"offset"\:10254,"length"\:77,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java","line"\:269,"offset"\:10322,"length"\:16,"message"\:"Method createNameFilter is duplicated in [[\\"org.apache.commons.io.DirectoryWalkerTestCaseJava4\\"|\\"relative\://src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java\:265\:10106\:16\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/CommentedCode.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java","line"\:196,"offset"\:10339,"length"\:155,"message"\:"This comment appears to contain commented-out code","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/IOUtilsTestCase.java","line"\:266,"offset"\:10343,"length"\:37,"message"\:"This CharArrayReader is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/IOUtilsTestCase.java","line"\:267,"offset"\:10395,"length"\:37,"message"\:"This CharArrayReader is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/MostlyDuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java","line"\:277,"offset"\:10414,"length"\:10,"message"\:"88% of the statements in testCancel are duplicated in [[\\"DirectoryWalkerTestCase.testCancel()\\"|\\"relative\://src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java\:281\:10630\:10\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/CWE/CWE-311/UseSSL.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/XmlStreamReader.java","line"\:268,"offset"\:10463,"length"\:21,"message"\:"Stream using vulnerable non-SSL connection.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/IOUtilsTestCase.java","line"\:270,"offset"\:10508,"length"\:38,"message"\:"This CharArrayReader is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/XmlStreamReader.java","line"\:269,"offset"\:10521,"length"\:73,"message"\:"This BOMInputStream is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/IOUtilsTestCase.java","line"\:271,"offset"\:10561,"length"\:38,"message"\:"This CharArrayReader is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/CommentedCode.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java","line"\:241,"offset"\:10612,"length"\:299,"message"\:"This comment appears to contain commented-out code","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/MostlyDuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java","line"\:281,"offset"\:10630,"length"\:10,"message"\:"88% of the statements in testCancel are duplicated in [[\\"DirectoryWalkerTestCaseJava4.testCancel()\\"|\\"relative\://src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java\:277\:10414\:10\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/XmlStreamReader.java","line"\:270,"offset"\:10631,"length"\:46,"message"\:"This BOMInputStream is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/IOUtilsTestCase.java","line"\:274,"offset"\:10675,"length"\:38,"message"\:"This CharArrayReader is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/IOUtilsTestCase.java","line"\:275,"offset"\:10728,"length"\:38,"message"\:"This CharArrayReader is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/IOUtilsTestCase.java","line"\:278,"offset"\:10843,"length"\:45,"message"\:"This CharArrayReader is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/IOUtilsTestCase.java","line"\:279,"offset"\:10903,"length"\:45,"message"\:"This CharArrayReader is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java","line"\:206,"offset"\:10922,"length"\:51,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/IOUtilsTestCase.java","line"\:282,"offset"\:11024,"length"\:40,"message"\:"This CharArrayReader is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/IOUtilsTestCase.java","line"\:283,"offset"\:11079,"length"\:44,"message"\:"This CharArrayReader is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseWriter.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java","line"\:343,"offset"\:11205,"length"\:75,"message"\:"This DeferredFileOutputStream is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Naming/ConfusingOverloading.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/IOUtils.java","line"\:336,"offset"\:11273,"length"\:12,"message"\:"Method IOUtils.closeQuietly(..) could be confused with overloaded method [[\\"closeQuietly\\"|\\"relative\://src/main/java/org/apache/commons/io/IOUtils.java\:216\:7764\:12\\"],[\\"closeQuietly\\"|\\"relative\://src/main/java/org/apache/commons/io/IOUtils.java\:242\:8532\:12\\"],[\\"closeQuietly\\"|\\"relative\://src/main/java/org/apache/commons/io/IOUtils.java\:269\:9357\:12\\"],[\\"closeQuietly\\"|\\"relative\://src/main/java/org/apache/commons/io/IOUtils.java\:297\:10195\:12\\"],[\\"closeQuietly\\"|\\"relative\://src/main/java/org/apache/commons/io/IOUtils.java\:421\:13995\:12\\"],[\\"closeQuietly\\"|\\"relative\://src/main/java/org/apache/commons/io/IOUtils.java\:454\:14879\:12\\"],[\\"closeQuietly\\"|\\"relative\://src/main/java/org/apache/commons/io/IOUtils.java\:487\:15808\:12\\"]], since dispatch depends on static types.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java","line"\:212,"offset"\:11276,"length"\:51,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Frameworks/Java objects/Garbage collection/GarbageCollection.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java","line"\:325,"offset"\:11372,"length"\:11,"message"\:"Explicit garbage collection. This should only be used in benchmarking code","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Useless Code/DeadStoreOfLocal.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java","line"\:337,"offset"\:11929,"length"\:11,"message"\:"This assignment to list is useless\: the value is always overwritten before it is read.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Frameworks/Java objects/Garbage collection/GarbageCollection.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java","line"\:338,"offset"\:11954,"length"\:11,"message"\:"Explicit garbage collection. This should only be used in benchmarking code","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/ReturnValueIgnored.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/IOCaseTestCase.java","line"\:284,"offset"\:12302,"length"\:45,"message"\:"The result of the call is ignored, but 91% of calls to checkIndexOf use the return value.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/ReturnValueIgnored.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/IOCaseTestCase.java","line"\:288,"offset"\:12450,"length"\:45,"message"\:"The result of the call is ignored, but 91% of calls to checkIndexOf use the return value.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/LineIteratorTestCase.java","line"\:377,"offset"\:12524,"length"\:24,"message"\:"This FileReader is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java","line"\:356,"offset"\:12544,"length"\:11,"message"\:"Method testSkip ignores exceptional return value of InputStream.skip","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java","line"\:286,"offset"\:12563,"length"\:16,"message"\:"Method testFileDelete ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/ReturnValueIgnored.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/IOCaseTestCase.java","line"\:292,"offset"\:12598,"length"\:44,"message"\:"The result of the call is ignored, but 91% of calls to checkIndexOf use the return value.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java","line"\:373,"offset"\:12814,"length"\:82,"message"\:"This BOMInputStream is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/LineIteratorTestCase.java","line"\:389,"offset"\:12976,"length"\:24,"message"\:"This FileReader is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java","line"\:379,"offset"\:13087,"length"\:81,"message"\:"This BOMInputStream is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/CWE/CWE-190/ComparisonWithWiderType.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/BOMInputStream.java","line"\:403,"offset"\:13217,"length"\:11,"message"\:"Comparison between [[\\"expression\\"|\\"relative\://src/main/java/org/apache/commons/io/input/BOMInputStream.java\:403\:13221\:7\\"]] of type int and [[\\"expression\\"|\\"relative\://src/main/java/org/apache/commons/io/input/BOMInputStream.java\:403\:13217\:1\\"]] of wider type long.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Useless Code/DeadStoreOfLocal.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java","line"\:406,"offset"\:14166,"length"\:28,"message"\:"This assignment to buff is useless\: the value is always overwritten before it is read.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Useless Code/EmptyStatement.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/output/WriterOutputStream.java","line"\:339,"offset"\:14334,"length"\:1,"message"\:"This empty statement should be deleted.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java","line"\:349,"offset"\:15604,"length"\:16,"message"\:"Method testObserveSingleFile ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Concurrency/Waiting/BusyWait.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/Tailer.java","line"\:419,"offset"\:15627,"length"\:26,"message"\:"Prefer wait/notify or java.util.concurrent to communicate between threads","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/CommentedCode.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java","line"\:311,"offset"\:15666,"length"\:65,"message"\:"This comment appears to contain commented-out code","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java","line"\:340,"offset"\:17115,"length"\:34,"message"\:"This XmlStreamReader is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Useless Code/EmptyStatement.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java","line"\:340,"offset"\:17159,"length"\:1,"message"\:"This empty statement should be deleted.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/MostlyDuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java","line"\:393,"offset"\:17371,"length"\:41,"message"\:"94% of the statements in testGetFreeSpaceUnix_String_EmptyResponse are duplicated in [[\\"FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java\:419\:18187\:44\\"],[\\"FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java\:447\:19169\:44\\"],[\\"FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java\:475\:20170\:44\\"],[\\"FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java\:503\:21171\:44\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Naming/ConfusingOverloading.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java","line"\:503,"offset"\:17633,"length"\:12,"message"\:"Method FileFilterUtils.asFileFilter(..) could be confused with overloaded method [[\\"asFileFilter\\"|\\"relative\://src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java\:515\:18020\:12\\"]], since dispatch depends on static types.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Exceptions/NullMaybe.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/Tailer.java","line"\:467,"offset"\:18156,"length"\:6,"message"\:"Variable [[\\"reader\\"|\\"relative\://src/main/java/org/apache/commons/io/input/Tailer.java\:407\:15099\:31\\"]] may be null here.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/MostlyDuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java","line"\:419,"offset"\:18187,"length"\:44,"message"\:"94% of the statements in testGetFreeSpaceUnix_String_InvalidResponse1 are duplicated in [[\\"FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java\:393\:17371\:41\\"],[\\"FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java\:447\:19169\:44\\"],[\\"FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java\:475\:20170\:44\\"],[\\"FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java\:503\:21171\:44\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Concurrency/Waiting/BusyWait.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/Tailer.java","line"\:477,"offset"\:18516,"length"\:26,"message"\:"Prefer wait/notify or java.util.concurrent to communicate between threads","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/TodoComments.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java","line"\:462,"offset"\:18915,"length"\:17,"message"\:"TODO/FIXME comment","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/MostlyDuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java","line"\:447,"offset"\:19169,"length"\:44,"message"\:"94% of the statements in testGetFreeSpaceUnix_String_InvalidResponse2 are duplicated in [[\\"FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java\:393\:17371\:41\\"],[\\"FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java\:419\:18187\:44\\"],[\\"FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java\:475\:20170\:44\\"],[\\"FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java\:503\:21171\:44\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/MostlyDuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java","line"\:475,"offset"\:20170,"length"\:44,"message"\:"94% of the statements in testGetFreeSpaceUnix_String_InvalidResponse3 are duplicated in [[\\"FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java\:393\:17371\:41\\"],[\\"FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java\:419\:18187\:44\\"],[\\"FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java\:447\:19169\:44\\"],[\\"FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java\:503\:21171\:44\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/MostlyDuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java","line"\:503,"offset"\:21171,"length"\:44,"message"\:"94% of the statements in testGetFreeSpaceUnix_String_InvalidResponse4 are duplicated in [[\\"FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java\:393\:17371\:41\\"],[\\"FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java\:419\:18187\:44\\"],[\\"FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java\:447\:19169\:44\\"],[\\"FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java\:475\:20170\:44\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/CommentedCode.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:571,"offset"\:21908,"length"\:662,"message"\:"This comment appears to contain commented-out code","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java","line"\:607,"offset"\:22388,"length"\:79,"message"\:"This BOMInputStream is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/CommentedCode.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java","line"\:535,"offset"\:22393,"length"\:66,"message"\:"This comment appears to contain commented-out code","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/CommentedCode.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java","line"\:545,"offset"\:22888,"length"\:72,"message"\:"This comment appears to contain commented-out code","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java","line"\:618,"offset"\:22958,"length"\:79,"message"\:"This BOMInputStream is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/ReturnValueIgnored.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:614,"offset"\:23356,"length"\:63,"message"\:"The result of the call is ignored, but 94% of calls to contentEquals use the return value.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java","line"\:628,"offset"\:23542,"length"\:79,"message"\:"This BOMInputStream is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:625,"offset"\:23780,"length"\:49,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java","line"\:636,"offset"\:23950,"length"\:79,"message"\:"This BOMInputStream is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:632,"offset"\:24042,"length"\:49,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:639,"offset"\:24307,"length"\:53,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java","line"\:644,"offset"\:24403,"length"\:79,"message"\:"This BOMInputStream is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java","line"\:646,"offset"\:24613,"length"\:56,"message"\:"This XmlStreamReader is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Frameworks/Strings/MissingLocaleArgument.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java","line"\:594,"offset"\:24635,"length"\:22,"message"\:"toUpperCase without locale parameter","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:651,"offset"\:24819,"length"\:20,"message"\:"Method testContentEquals ignores exceptional return value of File.createNewFile","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:652,"offset"\:24849,"length"\:21,"message"\:"Method testContentEquals ignores exceptional return value of File.createNewFile","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java","line"\:653,"offset"\:24988,"length"\:79,"message"\:"This BOMInputStream is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java","line"\:655,"offset"\:25198,"length"\:56,"message"\:"This XmlStreamReader is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java","line"\:662,"offset"\:25523,"length"\:52,"message"\:"This BOMInputStream is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/ReturnValueIgnored.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:670,"offset"\:25615,"length"\:78,"message"\:"The result of the call is ignored, but 94% of calls to contentEqualsIgnoreEOL use the return value.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java","line"\:670,"offset"\:25949,"length"\:56,"message"\:"This BOMInputStream is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseReader.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java","line"\:678,"offset"\:26383,"length"\:56,"message"\:"This BOMInputStream is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java","line"\:686,"offset"\:26724,"length"\:11,"message"\:"Method testSkipWithBOM ignores exceptional return value of InputStream.skip","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:697,"offset"\:26827,"length"\:49,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java","line"\:663,"offset"\:26973,"length"\:12,"message"\:"Method getXmlProlog is duplicated in [[\\"org.apache.commons.io.input.XmlStreamReader\\"|\\"relative\://src/main/java/org/apache/commons/io/input/XmlStreamReader.java\:705\:28522\:12\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:702,"offset"\:27021,"length"\:51,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java","line"\:695,"offset"\:27025,"length"\:11,"message"\:"Method testSkipWithoutBOM ignores exceptional return value of InputStream.skip","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:707,"offset"\:27223,"length"\:49,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:730,"offset"\:28230,"length"\:21,"message"\:"Method testContentEqualsIgnoreEOL ignores exceptional return value of File.createNewFile","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:731,"offset"\:28261,"length"\:21,"message"\:"Method testContentEqualsIgnoreEOL ignores exceptional return value of File.createNewFile","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/TodoComments.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java","line"\:669,"offset"\:28343,"length"\:16,"message"\:"TODO/FIXME comment","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/XmlStreamReader.java","line"\:705,"offset"\:28522,"length"\:12,"message"\:"Method getXmlProlog is duplicated in [[\\"org.apache.commons.io.input.compatibility.XmlStreamReader\\"|\\"relative\://src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java\:663\:26973\:12\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/TodoComments.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java","line"\:673,"offset"\:28526,"length"\:16,"message"\:"TODO/FIXME comment","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:746,"offset"\:28768,"length"\:36,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Frameworks/Strings/MissingLocaleArgument.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java","line"\:703,"offset"\:28808,"length"\:24,"message"\:"toUpperCase without locale parameter","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java","line"\:712,"offset"\:29076,"length"\:8,"message"\:"Method isAppXml is duplicated in [[\\"org.apache.commons.io.input.XmlStreamReader\\"|\\"relative\://src/main/java/org/apache/commons/io/input/XmlStreamReader.java\:760\:30773\:8\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:754,"offset"\:29083,"length"\:44,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/TodoComments.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:759,"offset"\:29229,"length"\:50,"message"\:"TODO/FIXME comment","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java","line"\:722,"offset"\:29539,"length"\:9,"message"\:"Method isTextXml is duplicated in [[\\"org.apache.commons.io.input.XmlStreamReader\\"|\\"relative\://src/main/java/org/apache/commons/io/input/XmlStreamReader.java\:775\:31325\:9\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:770,"offset"\:29626,"length"\:36,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Extensibility/GetClassGetResource.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:778,"offset"\:29951,"length"\:44,"message"\:"The idiom getClass().getResource() is unsafe for classes that may be extended.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/TodoComments.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:783,"offset"\:30097,"length"\:50,"message"\:"TODO/FIXME comment","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Frameworks/Strings/MissingLocaleArgument.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/XmlStreamReader.java","line"\:745,"offset"\:30349,"length"\:24,"message"\:"toUpperCase without locale parameter","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:796,"offset"\:30469,"length"\:24,"message"\:"Method testForceMkdir ignores exceptional return value of File.createNewFile","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/XmlStreamReader.java","line"\:760,"offset"\:30773,"length"\:8,"message"\:"Method isAppXml is duplicated in [[\\"org.apache.commons.io.input.compatibility.XmlStreamReader\\"|\\"relative\://src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java\:712\:29076\:8\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/DuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/input/XmlStreamReader.java","line"\:775,"offset"\:31325,"length"\:9,"message"\:"Method isTextXml is duplicated in [[\\"org.apache.commons.io.input.compatibility.XmlStreamReader\\"|\\"relative\://src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java\:722\:29539\:9\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:851,"offset"\:32243,"length"\:20,"message"\:"Method testSizeOfDirectory ignores exceptional return value of File.createNewFile","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:863,"offset"\:32550,"length"\:12,"message"\:"Method testSizeOfDirectory ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/CommentedCode.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/IOUtilsTestCase.java","line"\:892,"offset"\:32792,"length"\:341,"message"\:"This comment appears to contain commented-out code","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/CWE/CWE-078/ExecUnescaped.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:877,"offset"\:32988,"length"\:42,"message"\:"Command line is built with string concatenation.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/CWE/CWE-078/ExecRelative.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:877,"offset"\:32988,"length"\:42,"message"\:"Command with a relative path \\u0027ln\\u0027 is executed.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/CWE/CWE-078/ExecRelative.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:881,"offset"\:33135,"length"\:46,"message"\:"Command with a relative path \\u0027mklink\\u0027 is executed.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/CWE/CWE-078/ExecUnescaped.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:881,"offset"\:33135,"length"\:46,"message"\:"Command line is built with string concatenation.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:900,"offset"\:33719,"length"\:20,"message"\:"Method testSizeOfDirectoryAsBigInteger ignores exceptional return value of File.createNewFile","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/CWE/CWE-311/UseSSL.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/IOUtils.java","line"\:910,"offset"\:33929,"length"\:24,"message"\:"Stream using vulnerable non-SSL connection.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:912,"offset"\:34038,"length"\:12,"message"\:"Method testSizeOfDirectoryAsBigInteger ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:920,"offset"\:34310,"length"\:12,"message"\:"Method testSizeOfDirectoryAsBigInteger ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:973,"offset"\:36209,"length"\:20,"message"\:"Method testSizeOf ignores exceptional return value of File.createNewFile","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:1010,"offset"\:37246,"length"\:20,"message"\:"Method testSizeOfAsBigInteger ignores exceptional return value of File.createNewFile","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java","line"\:981,"offset"\:41234,"length"\:26,"message"\:"Method testCanRead ignores exceptional return value of File.setReadOnly","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java","line"\:1002,"offset"\:42149,"length"\:26,"message"\:"Method testCanWrite ignores exceptional return value of File.setReadOnly","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/TodoComments.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/FileUtils.java","line"\:1145,"offset"\:47169,"length"\:15,"message"\:"TODO/FIXME comment","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/TodoComments.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/FileUtils.java","line"\:1161,"offset"\:47863,"length"\:15,"message"\:"TODO/FIXME comment","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/TodoComments.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/FileUtils.java","line"\:1162,"offset"\:47929,"length"\:15,"message"\:"TODO/FIXME comment","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/FileUtils.java","line"\:1168,"offset"\:48213,"length"\:48,"message"\:"Method doCopyFile ignores exceptional return value of File.setLastModified","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:1319,"offset"\:49897,"length"\:14,"message"\:"Method testCopyDirectoryToDirectory_NonExistingDest ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:1363,"offset"\:51863,"length"\:14,"message"\:"Method testCopyDirectoryToNonExistingDest ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:1405,"offset"\:53704,"length"\:14,"message"\:"Method testCopyDirectoryToExistingDest ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Naming/ConfusingOverloading.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/IOUtils.java","line"\:1416,"offset"\:54961,"length"\:13,"message"\:"Method IOUtils.toInputStream(..) could be confused with overloaded method [[\\"toInputStream\\"|\\"relative\://src/main/java/org/apache/commons/io/IOUtils.java\:1465\:57022\:13\\"]], since dispatch depends on static types.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Naming/ConfusingOverloading.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/IOUtils.java","line"\:1429,"offset"\:55422,"length"\:13,"message"\:"Method IOUtils.toInputStream(..) could be confused with overloaded method [[\\"toInputStream\\"|\\"relative\://src/main/java/org/apache/commons/io/IOUtils.java\:1478\:57465\:13\\"]], since dispatch depends on static types.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:1446,"offset"\:55542,"length"\:23,"message"\:"Method testCopyDirectoryPreserveDates ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:1451,"offset"\:55857,"length"\:42,"message"\:"Method testCopyDirectoryPreserveDates ignores exceptional return value of File.setLastModified","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:1452,"offset"\:55909,"length"\:47,"message"\:"Method testCopyDirectoryPreserveDates ignores exceptional return value of File.setLastModified","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:1453,"offset"\:55966,"length"\:38,"message"\:"Method testCopyDirectoryPreserveDates ignores exceptional return value of File.setLastModified","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Naming/ConfusingOverloading.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/IOUtils.java","line"\:1449,"offset"\:56415,"length"\:13,"message"\:"Method IOUtils.toInputStream(..) could be confused with overloaded method [[\\"toInputStream\\"|\\"relative\://src/main/java/org/apache/commons/io/IOUtils.java\:1498\:58469\:13\\"]], since dispatch depends on static types.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/CWE/CWE-190/IntMultToLong.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:1517,"offset"\:59050,"length"\:71,"message"\:"Result of integer multiplication cast to long","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Arithmetic/IntMultToLong.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:1517,"offset"\:59050,"length"\:71,"message"\:"Result of integer multiplication cast to long","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/ReturnValueIgnored.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java","line"\:1025,"offset"\:59342,"length"\:55,"message"\:"The result of the call is ignored, but 96% of calls to isExtension use the return value.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/FileUtils.java","line"\:1453,"offset"\:62078,"length"\:46,"message"\:"Method doCopyDirectory ignores exceptional return value of File.setLastModified","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:1599,"offset"\:62474,"length"\:27,"message"\:"Method testForceDeleteAFile1 ignores exceptional return value of File.createNewFile","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:1608,"offset"\:62847,"length"\:27,"message"\:"Method testForceDeleteAFile2 ignores exceptional return value of File.createNewFile","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Incomplete Code/TodoComments.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java","line"\:1563,"offset"\:63350,"length"\:24,"message"\:"TODO/FIXME comment","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/CWE/CWE-311/UseSSL.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/FileUtils.java","line"\:1506,"offset"\:65197,"length"\:27,"message"\:"Stream using vulnerable non-SSL connection.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Naming/ConfusingOverloading.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/IOUtils.java","line"\:1735,"offset"\:68131,"length"\:5,"message"\:"Method IOUtils.write(..) could be confused with overloaded method [[\\"write\\"|\\"relative\://src/main/java/org/apache/commons/io/IOUtils.java\:1816\:71464\:5\\"],[\\"write\\"|\\"relative\://src/main/java/org/apache/commons/io/IOUtils.java\:1898\:74817\:5\\"]], since dispatch depends on static types.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:1750,"offset"\:68588,"length"\:14,"message"\:"Method testListFiles ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:1753,"offset"\:68670,"length"\:15,"message"\:"Method testListFiles ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Naming/ConfusingOverloading.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/IOUtils.java","line"\:1756,"offset"\:68932,"length"\:5,"message"\:"Method IOUtils.write(..) could be confused with overloaded method [[\\"write\\"|\\"relative\://src/main/java/org/apache/commons/io/IOUtils.java\:1837\:72229\:5\\"],[\\"write\\"|\\"relative\://src/main/java/org/apache/commons/io/IOUtils.java\:1920\:75607\:5\\"]], since dispatch depends on static types.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Exceptions/DroppedExceptions.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/FileUtils.java","line"\:1608,"offset"\:69630,"length"\:31,"message"\:"Exceptions should not be dropped.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Naming/ConfusingOverloading.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/IOUtils.java","line"\:1774,"offset"\:69678,"length"\:5,"message"\:"Method IOUtils.write(..) could be confused with overloaded method [[\\"write\\"|\\"relative\://src/main/java/org/apache/commons/io/IOUtils.java\:1855\:72957\:5\\"]], since dispatch depends on static types.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:1804,"offset"\:70516,"length"\:15,"message"\:"Method testListFilesWithDirs ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:1807,"offset"\:70601,"length"\:15,"message"\:"Method testListFilesWithDirs ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Readability/Naming/ConfusingOverloading.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/IOUtils.java","line"\:1799,"offset"\:70812,"length"\:5,"message"\:"Method IOUtils.write(..) could be confused with overloaded method [[\\"write\\"|\\"relative\://src/main/java/org/apache/commons/io/IOUtils.java\:1879\:74078\:5\\"],[\\"write\\"|\\"relative\://src/main/java/org/apache/commons/io/IOUtils.java\:1945\:76758\:5\\"]], since dispatch depends on static types.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:1823,"offset"\:71202,"length"\:15,"message"\:"Method testListFilesWithDirs ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:1841,"offset"\:71933,"length"\:14,"message"\:"Method testIterateFiles ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:1889,"offset"\:73665,"length"\:15,"message"\:"Method testIterateFilesAndDirs ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:1892,"offset"\:73750,"length"\:15,"message"\:"Method testIterateFilesAndDirs ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:1908,"offset"\:74351,"length"\:15,"message"\:"Method testIterateFilesAndDirs ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Concurrency/Waiting/BusyWait.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/FileUtils.java","line"\:1736,"offset"\:74380,"length"\:39,"message"\:"Prefer wait/notify or java.util.concurrent to communicate between threads","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Resource Leaks/CloseWriter.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/FileUtils.java","line"\:2311,"offset"\:99235,"length"\:29,"message"\:"This BufferedOutputStream is not always closed on method exit.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:16,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Concurrency/Thread Safety/LazyInitStaticField.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/IOUtils.java","line"\:2675,"offset"\:107731,"length"\:45,"message"\:"Incorrect lazy initialization of static field [[\\"SKIP_BYTE_BUFFER\\"|\\"relative\://src/main/java/org/apache/commons/io/IOUtils.java\:170\:6528\:16\\"]]\: Missing synchronization.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/MostlyDuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:2728,"offset"\:107909,"length"\:24,"message"\:"90% of the statements in testMoveDirectory_Rename are duplicated in [[\\"FileUtilsTestCase.testMoveDirectory_CopyDelete()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileUtilsTestCase.java\:2761\:109292\:28\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Maintainability/Duplicate Code/MostlyDuplicateMethod.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:2761,"offset"\:109292,"length"\:28,"message"\:"90% of the statements in testMoveDirectory_CopyDelete are duplicated in [[\\"FileUtilsTestCase.testMoveDirectory_Rename()\\"|\\"relative\://src/test/java/org/apache/commons/io/FileUtilsTestCase.java\:2728\:107909\:24\\"]].","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Concurrency/Thread Safety/LazyInitStaticField.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/main/java/org/apache/commons/io/IOUtils.java","line"\:2750,"offset"\:111178,"length"\:45,"message"\:"Incorrect lazy initialization of static field [[\\"SKIP_CHAR_BUFFER\\"|\\"relative\://src/main/java/org/apache/commons/io/IOUtils.java\:169\:6484\:16\\"]]\: Missing synchronization.","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:8,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:2842,"offset"\:112612,"length"\:19,"message"\:"Method testMoveDirectory_Errors ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}},{"violationQueryPath"\:"\\u003croot\\u003e/Correctness/Result Checking/IgnoreExceptionalReturn.ql","project"\:{"snapshotRepository"\:"commons-io/revision-2016-April-26--11-54-24.zip","id"\:"commons-io","name"\:"commons-io","lang"\:"JAVA"},"filename"\:"/src/test/java/org/apache/commons/io/FileUtilsTestCase.java","line"\:2843,"offset"\:112641,"length"\:20,"message"\:"Method testMoveDirectory_Errors ignores exceptional return value of File.mkdir","trackerLink"\:"","trackerLabel"\:"","status"\:"NEW","severity"\:4,"creationInfo"\:{}}]
